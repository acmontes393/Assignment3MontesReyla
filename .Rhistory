library(ggplot2)
ggplot(mtcars, aes(hp, mpg)) + geom_point()
number <- 10
absent <- NA
is.na(absent)
is.null(absent)
ls()
numeric_vector <-c(1, 2, 3)
character_vector <- c('Albania', 'Botswana', 'Cambodia')
country_factor <-factor(numeric_vector, labels=character_vector)
summary(country_factor)
fruits <-c(1,1,2,1)
fruit_names <- c('apples', 'Mangos')
fruit_factor <-factor(fuits, labels=fruit_names)
fruit_factor <-factor(fruits, labels=fruit_names)
summary(fruit_factor)
combined <-cbind(numeric_vector, character_vector)
combined
test_list <- list(countries = character_vector, not_there = c(NA, NA),
more_numbers = 1:10)
test_list
?ggplot2
?mean
?ggplot2
combined_df[c(1, 2), ]
combined_df <- data.frame(numeric_vector, character_vector,
stringsAsFactors = FALSE)
combined_df$character_vector[3] <- 'China'
combined_df$character_vector[4] <- 'Cambodia'
combined_df$new_var <- 1:3
combined_df
install.packages('dplyr')
?dplyr
mean (1:10)
data(swiss)
data(swiss)
## Creating a funtion
fun_mean <- function(x){
sum(x) / length(x)
}
fun_mean(x = swiss$Examination)
hist(swiss$Examination)
hist(swiss$Examination,
main = 'Swiss Canton Draftee Examination Scores (1888)',
xlab = '% receiving highest mark on army exam')
cor.test(log(swiss$Education), swiss$Examination)
plot(log(swiss$Education), swiss$Examination)
xlab = '% receiving highest mark on army exam')
data ("Titanic")
head(Titanic[1:3, 1:4])
View(swiss)
data ("Titanic")
data ("LifeCycleSavings")
?LifeCycleSavings
data ("Seatbelts")
?Seatbelts
?UKDriverDeaths
?Seatbelts
data("UKDriverDeaths")
names(UKDriverDeaths)
names(Seatbelts)
head(UKDriverDeaths)
View(swiss)
View(LifeCycleSavings)
data("AirPassengers")
?AirPassengers
?Seatbelts
hist(Seatbelts$DriversKilled)
View(LifeCycleSavings)
View(swiss)
?Loblolly
?trees
plot(log(trees$Girth), trees$Height,
ylab = "Girth (in)",
xlab = "Height (ft)")
plot(log(trees$Height), trees$Volume,
ylab = "Height (ft)",
xlab = "Volume (Timber in cubic ft)")
?trees
plot(log(trees$Girth), trees$Height,
ylab = "Girth (in)",
xlab = "Height (ft)")
cor.test(log(trees$Height), trees$Girth)
cor.test(log(trees$Height), trees$Volume)
cor.test(log(trees$Girth), trees$Volume)
library (ggplot2)
ggplot2::ggplot(Loblolly, aes(age, height)) + geom_point() + geom_smooth() + theme_bw()
boxplot(Loblolly$height, trees$Height)
?boxplot
boxplot(Loblolly$height, trees$Height, main="Loblolly' Cherry trees")
?boxplot
cor.test(Loblolly$height, Loblolly$age)
cor.test(Loblolly$height, Loblolly$age)
URL <- "http://www.oecd.org/els/mig/DIOC%202010-11Rev2.zip"
#Create a temporary file to put the zip
temp <- tempfile()
# Download the compressed
download.file(URL, temp)
OECDMigration2010 <-read.csv(gzfile(temp, "DIOC_2010_11_File_A_bis_REV.csv"))
View(OECDMigration2010)
View(OECDMigration2010)
?read.csv
?fileEncoding
??fileEncoding
?read.csv
OECDMigration2010 <-read.csv2(gzfile(temp, "DIOC_2010_11_File_A_bis_REV.csv"))
OECDMigration2010 <-read.csv2(gzfile(temp, "DIOC_2010_11_File_A_bis_REV.csv"))
library(httr)
?httr
??httr
install.packages('httr')
install.packages('dplyr')
install.packages('XML')
library(httr)
library(dplyr)
library(XML)
URL <-http://news.bbc.co.uk/2/hi/uk_news/politics/8044207.stm
URL <-'http://news.bbc.co.uk/2/hi/uk_news/politics/8044207.stm'
tables <- URL %>% GET() %>%
content(as = 'parsed') %>%
readHTMLTable()
URL <-'http://news.bbc.co.uk/2/hi/uk_news/politics/8044207.stm'
?get
URL <-'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
# get and parse all table on the webpage
tables <- URL %>% GET() %>%
content(as = 'parsed') %>%
readHTMLTable()
names(tables)
Meddals <- tables[[1]]
View(Meddals)
View(Meddals)
View(Meddals)
?data_frame
?names
head(Medal)[, 1:6]
head(Medals)[, 1:6]
tables <- URL %>% GET() %>%
content(as = 'parsed') %>%
readHTMLTable()
names(tables)
Medals <- tables[[1]]
head(Medals)[, 1:6]
View(Medals)
View(Medals)
?head
View(Medals)
View(Medals)
?names
names(V1) <-countries
names(Medals)[1] <- "Country"
names(Medals)[1] <- "Ranking"
names(Medals)[2] <- "Country"
names(Medals)[3] <- "Gold"
names(Medals)[4] <- "Silver"
names(Medals)[5] <- "Bronze"
names(Medals)[6] <- "Total"
View(Medals)
View(Medals)
medals <-select(Medals, -V7)
Medals <-select(Medals, -V7)
library(httr)
library(dplyr)
library(XML)
URL <-'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
# get and parse all table on the webpage
tables <- URL %>% GET() %>%
content(as = 'parsed') %>%
readHTMLTable()
names(tables)
Medals <- tables[[1]]
head(Medals)[, 1:6]
names(Medals)[1] <- "Ranking"
names(Medals)[2] <- "Country"
names(Medals)[3] <- "Gold"
names(Medals)[4] <- "Silver"
names(Medals)[5] <- "Bronze"
names(Medals)[6] <- "Total"
# Also
# names (medals) <-c('country', 'gold')
Medals <-select(Medals, -V7)
Medals$country <-as.character(Medals$Country)
Medals$Country <-as.character(Medals$Country)
View(Medals)
View(Medals)
URL <-'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
# get and parse all table on the webpage
tables <- URL %>% GET() %>%
content(as = 'parsed') %>%
readHTMLTable()
names(tables)
Medals <- tables[[1]]
head(Medals)[, 1:6]
#give names to columns
names(Medals)[1] <- "Ranking"
names(Medals)[2] <- "Country"
names(Medals)[3] <- "Gold"
names(Medals)[4] <- "Silver"
names(Medals)[5] <- "Bronze"
names(Medals)[6] <- "Total"
# Also
# names (medals) <-c('country', 'gold')
#Clear
Medals <-select(Medals, -V7)
#Convert variables to strings and numbers
Medals$Country <-as.character(Medals$Country)
for (i in 2:5) Medals [,i]<-as.integer(Medals[,i])
#sort
Medals <-arrange (medals, desc(total))
Medals <-arrange (Medals, desc(total))
Medals <-arrange (Medals, desc(Total))
View(Medals)
View(Medals)
for (i in 2:5) Medals[,i]<-as.integer(Medals[,i])
View(Medals)
View(Medals)
URL <-'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
# get and parse all table on the webpage
tables <- URL %>% GET() %>%
content(as = 'parsed') %>%
readHTMLTable()
names(tables)
Medals <- tables[[1]]
head(Medals)[, 1:6]
#give names to columns
names(Medals)[1] <- "Ranking"
names(Medals)[2] <- "Country"
names(Medals)[3] <- "Gold"
names(Medals)[4] <- "Silver"
names(Medals)[5] <- "Bronze"
names(Medals)[6] <- "Total"
# Also
# names (medals) <-c('country', 'gold')
#Clear
Medals <-select(Medals, -V7)
#Convert variables to strings and numbers
Medals$Country <-as.character(Medals$Country)
for (i in 3:5) Medals[,i]<-as.integer(Medals[,i])
#sort
Medals <-arrange (Medals, desc(Total))
View(Medals)
View(Medals)
for (i in 3:4) Medals[,i]<-as.integer(Medals[,i])
Medals <-arrange (Medals, desc(Total))
View(Medals)
View(Medals)
for (i in 3:6) Medals[,i]<-as.integer(Medals[,i])
Medals <-arrange (Medals, desc(Total))
View(Medals)
View(Medals)
URL <-'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
# get and parse all table on the webpage
tables <- URL %>% GET() %>%
content(as = 'parsed') %>%
readHTMLTable()
names(tables)
Medals <- tables[[1]]
head(Medals)[, 1:6]
#give names to columns
names(Medals)[1] <- "Ranking"
names(Medals)[2] <- "Country"
names(Medals)[3] <- "Gold"
names(Medals)[4] <- "Silver"
names(Medals)[5] <- "Bronze"
names(Medals)[6] <- "Total"
# Also
# names (medals) <-c('country', 'gold')
#Clear
Medals <-select(Medals, -V7)
#Convert variables to strings and numbers
Medals$Country <-as.character(Medals$Country)
for (i in 3:6) Medals[,i]<-as.integer(Medals[,i])
#sort
Medals <-arrange (Medals, desc(Total))
View(Medals)
View(Medals)
URL <-'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
# get and parse all table on the webpage
tables <- URL %>% GET() %>%
content(as = 'parsed') %>%
readHTMLTable()
names(tables)
Medals <- tables[[1]]
head(Medals)[, 1:6]
#give names to columns
names(Medals)[1] <- "Ranking"
names(Medals)[2] <- "Country"
names(Medals)[3] <- "Gold"
names(Medals)[4] <- "Silver"
names(Medals)[5] <- "Bronze"
names(Medals)[6] <- "Total"
# Also
# names (medals) <-c('country', 'gold')
#Clear
Medals <-select(Medals, -V7)
#Convert variables to strings and numbers
Medals$Country <-as.character(Medals$Country)
View(Medals)
View(Medals)
data(prestige)
data(Prestige)
library(car)
install.packages(car)
data(Prestige)
library(car)
install.packages(car)
library(WDI)
library(WDI-package)
WDI(country = "all", indicator = "NY.GNS.ICTR.GN.ZS",
start = 2005, end = 2011, extra = FALSE, cache = NULL)
library(WDI-package)
?WDI
library(WDI)
install.packages('WDI')
library(WDI)
Mobilephone <- WDI(country = "all", indicator = "IT.CEL.SETS.P2",
start = 1990, end = 2013, extra = FALSE, cache = NULL)
View(Mobilephone)
Mobilephone<- WDI(country = "all", indicator = "IT.CEL.SETS.P",
start = 1990, end = 2013, extra = FALSE, cache = NULL)
Mobilephone<- WDI(country = "all", indicator = "IT.CEL.SETS.P",
start = 1990, end = 2013, extra = FALSE, cache = NULL)
Mobilepercap<- WDI(country = "all", indicator = "IT.CEL.SETS.P2",
start = 1990, end = 2013, extra = FALSE, cache = NULL)
View(Mobilepercap)
View(Mobilepercap)
Internetpercap<- WDI(country = "all", indicator = "IT.NET.USER.P2",
start = 1990, end = 2013, extra = FALSE, cache = NULL)
WDI_indi<- WDI(country = "all", indicator = c("IT.CEL.SETS.P2", "IT.CEL.SETS.P2")
start = 1990, end = 2013, extra = FALSE, cache = NULL)
WDI_indi<- WDI(country = "all", indicator = c("IT.CEL.SETS.P2", "IT.CEL.SETS.P2"),
start = 1990, end = 2013, extra = FALSE, cache = NULL)
View(WDI_indi)
WDI_indi<- WDI(country = "all", indicator = c("IT.CEL.SETS.P2", "IT.NET.SETS.P2"),
start = 1990, end = 2013, extra = FALSE, cache = NULL)
View(WDI_indi)
View(WDI_indi)
WDI_indi<- WDI(country = "all", indicator = c("IT.CEL.SETS.P2", "IT.NET.USER.P2"),
start = 1990, end = 2013, extra = FALSE, cache = NULL)
?kable
?knitr
install.packages('knitr')
install.packages('stargazer')
?read
library(WDI.data)
library(WDI)
data(WDI_data)
View(WDI_indi)
View(WDI_indi)
?WDI_data
ggplot(data = WDI_data, aes(x = IT.CEL.SETS.P2,
y = IT.NET.USER.P2)) + geom_point()
library(ggplot)
library(ggplot2)
install.packages('ggplot2')
install.packages("ggplot2")
library(ggplot2)
ggplot2(data = WDI_data, aes(x = IT.CEL.SETS.P2,
y = IT.NET.USER.P2)) + geom_point()
URL <- "http://esa.un.org/unmigration/TIMSO2013/data/subsheets/UN_MigrantStockByOriginAndDestination_2013T10.xls"
#Create a temporary file to put the zip
temp <- tempfile()
# Download the compressed
download.file(URL, temp)
#
Migration90 <-read.ftable(temp, "Table 1"))
Migration90 <-read.ftable(URL, "Table 1"))
Migration90 <-read.table(temp, "Table 1"))
Migration90 <-read.table(temp, "Table 1", to.data.frame=TRUE)
?read.table
Migration90 <-read.table(temp, to.data.frame=TRUE)
Migration90 <-read.table(temp, "UN_MigrantStockByOriginAndDestination_2013T10.xls", to.data.frame=TRUE)
Migration90 <-read.table(temp, "UN_MigrantStockByOriginAndDestination_2013T10.xls")
Migration90 = read.table(temp, "UN_MigrantStockByOriginAndDestination_2013T10.xls")
URL <- "http://esa.un.org/unmigration/TIMSO2013/data/subsheets/UN_MigrantStockByOriginAndDestination_2013T10.xls"
#Create a temporary file to put the zip
temp <- tempfile()
# Download the compressed
download.file(URL, temp)
#
Migration90 = read.table(temp, "UN_MigrantStockByOriginAndDestination_2013T10.xls")
setwd('/Users/AnaCe/Dropbox/Hertie/CollaborativeDataAnalysis/R/Assignment3MontesReyla')
require(xlsx)
install.packages('xlsx')
require(xlsx)
read.xlsx("UN_MigrantStockByOriginAndDestination_2013T10.xlsx", sheetName = "Table 1")
setwd('/Users/AnaCe/Dropbox/Hertie/CollaborativeDataAnalysis/R/Assignment3MontesReyla')
setwd('/Users/AnaCe/Dropbox/Hertie/CollaborativeDataAnalysis/R/Assignment3MontesReyla')
read.xlsx("UN_MigrantStockByOriginAndDestination_2013T10.xlsx", sheetName = "Table 1")
read.xlsx("UN_MigrantStockByOriginAndDestination_2013T10.xlsx", sheetName = "Table 1")
read.xlsx("UN_MigrantStockByOriginAndDestination_2013T10.xls", sheetName = "Table 1")
Migration90 = read.table( "UN_MigrantStockByOriginAndDestination_2013T10.xls")
View(Migration90)
View(Migration90)
View(Migration90)
View(Migration90)
View(Migration90)
View(Migration90)
read.xlsx("UN_MigrantStockByOriginAndDestination_2013T10.xls", sheetName = "Table 1")
read.xlsx("UN_MigrantStockByOriginAndDestination_2013T10.xls", sheetIndex = 2)
install.packages("rio")
library(rio)
full <- import("UN_MigrantStockByOriginAndDestination_2013T10.xls", sheetIndex = 2)
?import
full <- import("UN_MigrantStockByOriginAndDestination_2013T10.xls", sheet = 2)
View(full)
URL <- "http://esa.un.org/unmigration/TIMSO2013/data/subsheets/UN_MigrantStockByOriginAndDestination_2013T10.xls"
temp <- tempfile()
download.file(URL, temp)
rm(full)
full <- import(temp, sheet = 2)
full <- import("UN_MigrantStockByOriginAndDestination_2013T10.xls", format = "xls", sheet = 2)
full <- import(temp, sheet = 2, format = "xls")
full <- read.xlsx(temp, sheetIndex = 2)
full <- readxl::read_excel(temp, sheet = 2)
URL <- "http://esa.un.org/unmigration/TIMSO2013/data/subsheets/UN_MigrantStockByOriginAndDestination_2013T10.xls"
#Create a temporary file to put the zip
temp <- tempfile()
# Download the compressed
download.file(URL, Migration90.xls)
