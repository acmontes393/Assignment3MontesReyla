"1.0.HCount.10usd"),
start = 1990, end = 2013, extra = FALSE, cache = NULL)
View(WDI_indi)
knitr::opts_chunk$set(echo = FALSE)
library(WDI)
library(RJSONIO)
WDI_indi<- WDI(country = c("AR","BR","BZ", "CL", "CO", "EC", "SL", "GT", "HN",
"LA", "MX", "NI", "PA", "PR", "PE", "UY","VE"),
indicator = c("NY.GDP.PCAP.KD.ZG", "1.0.HCount.1.25usd",
"1.0.HCount.2.5usd", "1.0.HCount.Poor4uds",
"1.0.HCount.10usd"),
start = 1990, end = 2013, extra = FALSE, cache = NULL)
write.table(WDI_indi, file = "WDI_indi", append = FALSE, quote = TRUE, sep = , ,
eol = "\n", na = "NA", dec = ".", row.names = TRUE,
col.names = TRUE, qmethod = c("escape", "double"),
fileEncoding = "")
View(WDI_indi)
View(WDI_indi)
plot(log(WDI_indi$NY.GDP.PCAP.KD.ZG), WDI_indi$1.0.HCount.1.25usd)
knitr::opts_chunk$set(echo = FALSE)
library(WDI)
library(RJSONIO)
WDI_indi<- WDI(country = c("AR","BR","BZ", "CL", "CO", "EC", "SV", "GT", "HN",
"LA", "MX", "NI", "PA", "PR", "PE", "UY","VE"),
indicator = c("NY.GDP.PCAP.KD.ZG", "1.0.HCount.1.25usd",
"1.0.HCount.2.5usd", "1.0.HCount.Poor4uds",
"1.0.HCount.10usd"),
start = 1990, end = 2013, extra = FALSE, cache = NULL)
write.table(WDI_indi, file = "WDI_indi", append = FALSE, quote = TRUE, sep = , ,
eol = "\n", na = "NA", dec = ".", row.names = TRUE,
col.names = TRUE, qmethod = c("escape", "double"),
fileEncoding = "")
WDI_indi$1.0.HCount.1.25usd <-Geadcount.1.25
plot(log(WDI_indi$NY.GDP.PCAP.KD.ZG), WDI_indi$"1.0.HCount.1.25usd")
?plot
plot(WDI_indi$NY.GDP.PCAP.KD.ZG, WDI_indi$"1.0.HCount.1.25usd", xlab = "GDP per capita growth", ylab= "Head count 1.25 us"")
plot(WDI_indi$NY.GDP.PCAP.KD.ZG, WDI_indi$"1.0.HCount.1.25usd", xlab = "GDP per capita growth", ylab= "Head count 1.25 us"")
plot(WDI_indi$NY.GDP.PCAP.KD.ZG, WDI_indi$"1.0.HCount.1.25usd", xlab = "GDP per capita growth", ylab= "Head count 1.25 us")
?ggplot2
plot(WDI_indi$NY.GDP.PCAP.KD.ZG, WDI_indi$"1.0.HCount.1.25usd", xlab = "GDP per capita growth", ylab= "Head count 1.25 us")
ggplot2::ggplot(WDI_indi, aes (NY.GDP.PCAP.KD.ZG, "1.0.HCount.1.25usd"), , xlab = "GDP per capita growth", ylab= "Head count 1.25 us") + geom_point() + geom_smooth() + theme_bw()
plot(WDI_indi$NY.GDP.PCAP.KD.ZG, WDI_indi$"1.0.HCount.1.25usd", xlab = "GDP per capita growth", ylab= "Head count 1.25 us")
ggplot2::ggplot(WDI_indi, aes(NY.GDP.PCAP.KD.ZG, "1.0.HCount.1.25usd")) + geom_point() + geom_smooth() + theme_bw()
knitr::opts_chunk$set(echo = FALSE)
library(WDI)
library(RJSONIO)
library(ggplot2)
WDI_indi<- WDI(country = c("AR","BR","BZ", "CL", "CO", "EC", "SV", "GT", "HN",
"LA", "MX", "NI", "PA", "PR", "PE", "UY","VE"),
indicator = c("NY.GDP.PCAP.KD.ZG", "1.0.HCount.1.25usd",
"1.0.HCount.2.5usd", "1.0.HCount.Poor4uds",
"1.0.HCount.10usd"),
start = 1990, end = 2013, extra = FALSE, cache = NULL)
write.table(WDI_indi, file = "WDI_indi", append = FALSE, quote = TRUE, sep = , ,
eol = "\n", na = "NA", dec = ".", row.names = TRUE,
col.names = TRUE, qmethod = c("escape", "double"),
fileEncoding = "")
WDI_indi$1.0.HCount.1.25usd <-Geadcount.1.25
plot(WDI_indi$NY.GDP.PCAP.KD.ZG, WDI_indi$"1.0.HCount.1.25usd", xlab = "GDP per capita growth", ylab= "Head count 1.25 us")
ggplot2::ggplot(WDI_indi, aes(NY.GDP.PCAP.KD.ZG, "1.0.HCount.1.25usd")) + geom_point() + geom_smooth() + theme_bw()
plot(WDI_indi$NY.GDP.PCAP.KD.ZG, WDI_indi$"1.0.HCount.1.25usd", xlab = "GDP per capita growth", ylab= "Head count 1.25 us")
ggplot2::ggplot(WDI_indi, aes(NY.GDP.PCAP.KD.ZG, "1.0.HCount.1.25usd")) + geom_point() + geom_smooth(x) + theme_bw()
plot(WDI_indi$NY.GDP.PCAP.KD.ZG, WDI_indi$"1.0.HCount.1.25usd", xlab = "GDP per capita growth", ylab= "Head count 1.25 us")
ggplot2::ggplot(WDI_indi, aes(NY.GDP.PCAP.KD.ZG, "1.0.HCount.1.25usd")) + geom_point() + theme_bw()
plot(WDI_indi$NY.GDP.PCAP.KD.ZG, WDI_indi$"1.0.HCount.1.25usd", xlab = "GDP per capita growth", ylab= "Head count 1.25 us")
ggplot2::ggplot(WDI_indi, aes(NY.GDP.PCAP.KD.ZG, "1.0.HCount.1.25usd")) + geom_point() + geom_smooth(x) + theme_bw()
?ggplot2
?ggplot
plot(WDI_indi$NY.GDP.PCAP.KD.ZG, WDI_indi$"1.0.HCount.1.25usd", xlab = "GDP per abline(lm(NY.GDP.PCAP.KD.ZG~"1.0.HCount.1.25usd"), col="red")
plot(WDI_indi$NY.GDP.PCAP.KD.ZG, WDI_indi$"1.0.HCount.1.25usd", xlab = "GDP per abline(lm(NY.GDP.PCAP.KD.ZG~1.0.HCount.1.25usd), col="red")
install.packages(countrycode)
install.packages(countrycode)
install.packages('countrycode')
library(countrycode)
library(countrycode)
?countrycode
View(WDI_indi)
View(WDI_indi)
?is.na
# 2. Loading the default data for the years 2000-2012 from the Worldbank database
wbdata <- c('NY.GDP.MKTP.KD', 'NY.GDP.PCAP.PP.KD', 'SI.POV.GAPS', 'SP.RUR.TOTL.ZS',
'EN.ATM.CO2E.PC', 'EG.ELC.ACCS.ZS', 'SH.XPD.TOTL.ZS', 'SH.H2O.SAFE.ZS',
'SH.STA.ACSN', 'SL.UEM.TOTL.ZS','SL.TLF.0714.WK.ZS', 'SE.PRM.ENRR', 'SH.XPD.PCAP',
'SL.UEM.TOTL.FE.ZS', 'SE.PRM.ENRR.FE', 'SP.HOU.FEMA.ZS', 'SP.DYN.LE00.IN',
'SI.POV.GINI', 'SH.CON.1524.FE.ZS', 'SH.CON.1524.MA.ZS', 'SP.DYN.CONU.ZS',
'SH.IMM.IDPT', 'SH.IMM.MEAS', 'SH.STA.OWGH.ZS', 'SH.PRV.SMOK.FE',
'SH.PRV.SMOK.MA', 'SP.POP.TOTL','SH.MED.BEDS.ZS','SH.STA.BRTC.ZS')
dataset <- WDI(country='all', indicator=wbdata, start=2000, end=2012, extra=TRUE)
# 3. Cleaning the data
## Dropping regional data
dataset <- dataset[dataset$region != "Aggregates", ]
# Dropping rows where all variables are missing
dataset2 <- dataset[which(rowSums(!is.na(dataset[, wbdata])) > 0), ]
# Visualising and counting deleted values
rows.in.a1.that.are.not.in.a2  <- function(dataset,dataset2)
{
dataset.vec <- apply(dataset, 1, paste, collapse = "")
dataset2.vec <- apply(dataset2, 1, paste, collapse = "")
a1.without.a2.rows <- dataset[!dataset.vec %in% dataset2.vec,]
return(a1.without.a2.rows)
}
AllNAs <- rows.in.a1.that.are.not.in.a2(dataset,dataset2)
nrow(AllNAs)
dataset <- dataset2
# Dropping rows where information on variable iso2c is missing
dataset <- dataset[!is.na(dataset$iso2c),] ## No observations were dropped ###
## Ordering the dataset and the years (ascending)
dataset <- group_by(dataset, iso2c)
dataset <- arrange(dataset, iso2c, year)
## Renaming all the variables with simple names
dataset <- plyr::rename(dataset, c("NY.GDP.MKTP.KD" = "GDP"))
dataset <- plyr::rename(dataset, c("NY.GDP.PCAP.PP.KD" = "GDPpc"))
dataset <- plyr::rename(dataset, c("SI.POV.GAPS" = "Poverty"))
dataset <- plyr::rename(dataset, c("SP.RUR.TOTL.ZS" = "Rural"))
dataset <- plyr::rename(dataset, c("EN.ATM.CO2E.PC" = "CO2"))
dataset <- plyr::rename(dataset, c("EG.ELC.ACCS.ZS" = "Electr"))
dataset <- plyr::rename(dataset, c("SH.XPD.TOTL.ZS" = "HCexpend"))
dataset <- plyr::rename(dataset, c("SH.XPD.PCAP" = "HCexpendpc"))
dataset <- plyr::rename(dataset, c("SH.STA.BRTC.ZS" = "Births"))
dataset <- plyr::rename(dataset, c("SH.MED.BEDS.ZS" = "HospBeds"))
dataset <- plyr::rename(dataset, c("SH.H2O.SAFE.ZS" = "Water"))
dataset <- plyr::rename(dataset, c("SH.STA.ACSN" = "Sanitation"))
dataset <- plyr::rename(dataset, c("SL.UEM.TOTL.ZS" = "Unemploym"))
dataset <- plyr::rename(dataset, c("SL.TLF.0714.WK.ZS" = "Childempl"))
dataset <- plyr::rename(dataset, c("SE.PRM.ENRR" = "Primary"))
dataset <- plyr::rename(dataset, c("SL.UEM.TOTL.FE.ZS" = "FemUnempl"))
dataset <- plyr::rename(dataset, c("SE.PRM.ENRR.FE" = "FemSchool"))
dataset <- plyr::rename(dataset, c("SP.HOU.FEMA.ZS" = "FemHead"))
dataset <- plyr::rename(dataset, c("SP.DYN.LE00.IN" = "LifeExpect"))
dataset <- plyr::rename(dataset, c("SI.POV.GINI" = "GINI"))
dataset <- plyr::rename(dataset, c("SH.CON.1524.FE.ZS" = "CondFem"))
dataset <- plyr::rename(dataset, c("SH.CON.1524.MA.ZS" = "CondMale"))
dataset <- plyr::rename(dataset, c("SP.DYN.CONU.ZS" = "Contraceptive"))
dataset <- plyr::rename(dataset, c("SH.IMM.IDPT" = "DPT"))
dataset <- plyr::rename(dataset, c("SH.IMM.MEAS" = "Measles"))
dataset <- plyr::rename(dataset, c("SH.STA.OWGH.ZS" = "Overweight"))
dataset <- plyr::rename(dataset, c("SH.PRV.SMOK.FE" = "SmokeFem"))
dataset <- plyr::rename(dataset, c("SH.PRV.SMOK.MA" = "SmokeMale"))
dataset <- plyr::rename(dataset, c("SP.POP.TOTL" = "Population"))
## Counting NAs in the independent variables
AllNAs$GDPsum <- sum(is.na(dataset$GDP))/nrow(dataset)
AllNAs$GDPpcsum <- sum(is.na(dataset$GDPpc))/nrow(dataset)
AllNAs$Povertysum <- sum(is.na(dataset$Poverty))/nrow(dataset)
AllNAs$Ruralsum <- sum(is.na(dataset$Rural))/nrow(dataset)
AllNAs$CO2sum <- sum(is.na(dataset$CO2))/nrow(dataset)
AllNAs$Electrsum <- sum(is.na(dataset$Electr))/nrow(dataset)
AllNAs$HCexpendsum <- sum(is.na(dataset$HCexpend))/nrow(dataset)
AllNAs$HCexpendpcsum <- sum(is.na(dataset$HCexpendpc))/nrow(dataset)
AllNAs$Birthssum <- sum(is.na(dataset$Births))/nrow(dataset)
AllNAs$Watersum <- sum(is.na(dataset$Water))/nrow(dataset)
AllNAs$Sanitationsum <- sum(is.na(dataset$Sanitation))/nrow(dataset)
AllNAs$Unemploymsum <- sum(is.na(dataset$Unemploym))/nrow(dataset)
AllNAs$Childemplsum <- sum(is.na(dataset$Childempl))/nrow(dataset)
AllNAs$Primarysum <- sum(is.na(dataset$Primary))/nrow(dataset)
AllNAs$FemUnemplsum <- sum(is.na(dataset$FemUnempl))/nrow(dataset)
AllNAs$FemSchoolsum <- sum(is.na(dataset$FemSchool))/nrow(dataset)
AllNAs$FemHeadsum <- sum(is.na(dataset$FemHead))/nrow(dataset)
AllNAs$LifeExpectsum <- sum(is.na(dataset$LifeExpect))/nrow(dataset)
AllNAs$GINIsum <- sum(is.na(dataset$GINI))/nrow(dataset)
AllNAs$CondFemPsum <- sum(is.na(dataset$CondFem))/nrow(dataset)
AllNAs$CondMalesum <- sum(is.na(dataset$CondMale))/nrow(dataset)
AllNAs$Contraceptivesum <- sum(is.na(dataset$Contraceptive))/nrow(dataset)
AllNAs$DPTsum <- sum(is.na(dataset$DPT))/nrow(dataset)
AllNAs$Measlessum <- sum(is.na(dataset$Measles))/nrow(dataset)
AllNAs$Overweightsum <- sum(is.na(dataset$Overweight))/nrow(dataset)
AllNAs$SmokeFemsum <- sum(is.na(dataset$SmokeFem))/nrow(dataset)
AllNAs$SmokeMalesum <- sum(is.na(dataset$SmokeMale))/nrow(dataset)
AllNAs$HospBedssum <- sum(is.na(dataset$HospBeds))/nrow(dataset)
# 1. Loading Required Packages
# install.packages("RJOSONIO")
library(RJSONIO)
# install.packages("WDI")
library(WDI)
# install.packages("dplyr")
library(dplyr)
# install.packages("tidyr")
library(tidyr)
# install.packages("httr")
library(httr)
# install.packages("knitr")
library(knitr)
# install.packages("XML")
library(XML)
#install.packages("plyr")
library(plyr)
# install.packages("Amelia")
library(Amelia)
#install.packages("XLConnect")
library(XLConnect)
# install.packages("countrycode")
library("countrycode")
# install.packages ("ggplot2")
library(ggplot2)
# # install.packages ("magrittr") ???
library(magrittr)
# install.packages ("fmsb")
library(fmsb)
# install.packages ("car")
library(car)
# install.packages("DataCombine")
library(DataCombine)
# install.packages("lmtest")
library(lmtest)
####################################################################################
########################## LOADING AND CLEANING WDI DATA ###########################
####################################################################################
# 2. Loading the default data for the years 2000-2012 from the Worldbank database
wbdata <- c('NY.GDP.MKTP.KD', 'NY.GDP.PCAP.PP.KD', 'SI.POV.GAPS', 'SP.RUR.TOTL.ZS',
'EN.ATM.CO2E.PC', 'EG.ELC.ACCS.ZS', 'SH.XPD.TOTL.ZS', 'SH.H2O.SAFE.ZS',
'SH.STA.ACSN', 'SL.UEM.TOTL.ZS','SL.TLF.0714.WK.ZS', 'SE.PRM.ENRR', 'SH.XPD.PCAP',
'SL.UEM.TOTL.FE.ZS', 'SE.PRM.ENRR.FE', 'SP.HOU.FEMA.ZS', 'SP.DYN.LE00.IN',
'SI.POV.GINI', 'SH.CON.1524.FE.ZS', 'SH.CON.1524.MA.ZS', 'SP.DYN.CONU.ZS',
'SH.IMM.IDPT', 'SH.IMM.MEAS', 'SH.STA.OWGH.ZS', 'SH.PRV.SMOK.FE',
'SH.PRV.SMOK.MA', 'SP.POP.TOTL','SH.MED.BEDS.ZS','SH.STA.BRTC.ZS')
dataset <- WDI(country='all', indicator=wbdata, start=2000, end=2012, extra=TRUE)
# 3. Cleaning the data
## Dropping regional data
dataset <- dataset[dataset$region != "Aggregates", ]
# Dropping rows where all variables are missing
dataset2 <- dataset[which(rowSums(!is.na(dataset[, wbdata])) > 0), ]
# Visualising and counting deleted values
rows.in.a1.that.are.not.in.a2  <- function(dataset,dataset2)
{
dataset.vec <- apply(dataset, 1, paste, collapse = "")
dataset2.vec <- apply(dataset2, 1, paste, collapse = "")
a1.without.a2.rows <- dataset[!dataset.vec %in% dataset2.vec,]
return(a1.without.a2.rows)
}
AllNAs <- rows.in.a1.that.are.not.in.a2(dataset,dataset2)
nrow(AllNAs)
dataset <- dataset2
# Dropping rows where information on variable iso2c is missing
dataset <- dataset[!is.na(dataset$iso2c),] ## No observations were dropped ###
## Ordering the dataset and the years (ascending)
dataset <- group_by(dataset, iso2c)
dataset <- arrange(dataset, iso2c, year)
## Renaming all the variables with simple names
dataset <- plyr::rename(dataset, c("NY.GDP.MKTP.KD" = "GDP"))
dataset <- plyr::rename(dataset, c("NY.GDP.PCAP.PP.KD" = "GDPpc"))
dataset <- plyr::rename(dataset, c("SI.POV.GAPS" = "Poverty"))
dataset <- plyr::rename(dataset, c("SP.RUR.TOTL.ZS" = "Rural"))
dataset <- plyr::rename(dataset, c("EN.ATM.CO2E.PC" = "CO2"))
dataset <- plyr::rename(dataset, c("EG.ELC.ACCS.ZS" = "Electr"))
dataset <- plyr::rename(dataset, c("SH.XPD.TOTL.ZS" = "HCexpend"))
dataset <- plyr::rename(dataset, c("SH.XPD.PCAP" = "HCexpendpc"))
dataset <- plyr::rename(dataset, c("SH.STA.BRTC.ZS" = "Births"))
dataset <- plyr::rename(dataset, c("SH.MED.BEDS.ZS" = "HospBeds"))
dataset <- plyr::rename(dataset, c("SH.H2O.SAFE.ZS" = "Water"))
dataset <- plyr::rename(dataset, c("SH.STA.ACSN" = "Sanitation"))
dataset <- plyr::rename(dataset, c("SL.UEM.TOTL.ZS" = "Unemploym"))
dataset <- plyr::rename(dataset, c("SL.TLF.0714.WK.ZS" = "Childempl"))
dataset <- plyr::rename(dataset, c("SE.PRM.ENRR" = "Primary"))
dataset <- plyr::rename(dataset, c("SL.UEM.TOTL.FE.ZS" = "FemUnempl"))
dataset <- plyr::rename(dataset, c("SE.PRM.ENRR.FE" = "FemSchool"))
dataset <- plyr::rename(dataset, c("SP.HOU.FEMA.ZS" = "FemHead"))
dataset <- plyr::rename(dataset, c("SP.DYN.LE00.IN" = "LifeExpect"))
dataset <- plyr::rename(dataset, c("SI.POV.GINI" = "GINI"))
dataset <- plyr::rename(dataset, c("SH.CON.1524.FE.ZS" = "CondFem"))
dataset <- plyr::rename(dataset, c("SH.CON.1524.MA.ZS" = "CondMale"))
dataset <- plyr::rename(dataset, c("SP.DYN.CONU.ZS" = "Contraceptive"))
dataset <- plyr::rename(dataset, c("SH.IMM.IDPT" = "DPT"))
dataset <- plyr::rename(dataset, c("SH.IMM.MEAS" = "Measles"))
dataset <- plyr::rename(dataset, c("SH.STA.OWGH.ZS" = "Overweight"))
dataset <- plyr::rename(dataset, c("SH.PRV.SMOK.FE" = "SmokeFem"))
dataset <- plyr::rename(dataset, c("SH.PRV.SMOK.MA" = "SmokeMale"))
dataset <- plyr::rename(dataset, c("SP.POP.TOTL" = "Population"))
## Counting NAs in the independent variables
AllNAs$GDPsum <- sum(is.na(dataset$GDP))/nrow(dataset)
AllNAs$GDPpcsum <- sum(is.na(dataset$GDPpc))/nrow(dataset)
AllNAs$Povertysum <- sum(is.na(dataset$Poverty))/nrow(dataset)
AllNAs$Ruralsum <- sum(is.na(dataset$Rural))/nrow(dataset)
AllNAs$CO2sum <- sum(is.na(dataset$CO2))/nrow(dataset)
AllNAs$Electrsum <- sum(is.na(dataset$Electr))/nrow(dataset)
AllNAs$HCexpendsum <- sum(is.na(dataset$HCexpend))/nrow(dataset)
AllNAs$HCexpendpcsum <- sum(is.na(dataset$HCexpendpc))/nrow(dataset)
AllNAs$Birthssum <- sum(is.na(dataset$Births))/nrow(dataset)
AllNAs$Watersum <- sum(is.na(dataset$Water))/nrow(dataset)
AllNAs$Sanitationsum <- sum(is.na(dataset$Sanitation))/nrow(dataset)
AllNAs$Unemploymsum <- sum(is.na(dataset$Unemploym))/nrow(dataset)
AllNAs$Childemplsum <- sum(is.na(dataset$Childempl))/nrow(dataset)
AllNAs$Primarysum <- sum(is.na(dataset$Primary))/nrow(dataset)
AllNAs$FemUnemplsum <- sum(is.na(dataset$FemUnempl))/nrow(dataset)
AllNAs$FemSchoolsum <- sum(is.na(dataset$FemSchool))/nrow(dataset)
AllNAs$FemHeadsum <- sum(is.na(dataset$FemHead))/nrow(dataset)
AllNAs$LifeExpectsum <- sum(is.na(dataset$LifeExpect))/nrow(dataset)
AllNAs$GINIsum <- sum(is.na(dataset$GINI))/nrow(dataset)
AllNAs$CondFemPsum <- sum(is.na(dataset$CondFem))/nrow(dataset)
AllNAs$CondMalesum <- sum(is.na(dataset$CondMale))/nrow(dataset)
AllNAs$Contraceptivesum <- sum(is.na(dataset$Contraceptive))/nrow(dataset)
AllNAs$DPTsum <- sum(is.na(dataset$DPT))/nrow(dataset)
AllNAs$Measlessum <- sum(is.na(dataset$Measles))/nrow(dataset)
AllNAs$Overweightsum <- sum(is.na(dataset$Overweight))/nrow(dataset)
AllNAs$SmokeFemsum <- sum(is.na(dataset$SmokeFem))/nrow(dataset)
AllNAs$SmokeMalesum <- sum(is.na(dataset$SmokeMale))/nrow(dataset)
AllNAs$HospBedssum <- sum(is.na(dataset$HospBeds))/nrow(dataset)
########################################################################################
########################## Collaborative Data Analysis Assigement 3 ####################
########################################################################################
# 1. Installing and loading packages
install.packages('WDI')
install.packages('tidyr')
install.packages('rio')
install.packages('countrycode')
install.packages("RJOSONIO")
install.packages ("ggplot2")
library(countrycode)
library(WDI)
library(tidyr)
library(rio)
library(RJSONIO)
library(ggplot2)
#2. Setting directory
setwd('/Users/AnaCe/Dropbox/Hertie/CollaborativeDataAnalysis/R/Assignment3MontesReyla')
#setwd('/Users/ayrarowenareyla/Desktop/The Hertie School of Governance/Collaborative Social Sciences/Assignment3MontesReyla/Assignment3MontesReyla')
# 3. Load and data cleaning
# Migration UN Data: loop that loads into R each table
# in the file and extracts the relevant information for this assigment
tables <-c(2, 5, 8, 11)
for (i in tables)
{
Migration<- import("UN_MigrantStockByOriginAndDestination_2013T10.xls",
format = "xls", sheet =i)
emigration<- Migration[c(15,16),]
emigration<- t(emigration)
emigration<-as.data.frame(emigration)
emigration<- emigration[c(10:241),]
colnames(emigration) <- c("Country","Emigration")
assign(paste0("emigration", i), emigration)
}
emigrationtotal <- cbind(emigration11, emigration8, emigration5, emigration2)
emigrationtotal <-emigrationtotal[,c(1,2, 4, 6,  8)]
emigrationtotal <- gather(emigrationtotal, year, emigration, 2:5)
emigrationtotal$year <- as.character(emigrationtotal$year)
emigrationtotal$year[emigrationtotal$year=="Emigration"] <- "2013"
emigrationtotal$year[emigrationtotal$year=="Emigration.1"] <- "2010"
emigrationtotal$year[emigrationtotal$year=="Emigration.2"] <- "2000"
emigrationtotal$year[emigrationtotal$year=="Emigration.3"] <- "1990"
ls()
rm(list = c("emigration","emigration11", "emigration2", "emigration5", "emigration8",
"i", "tables"))
# 2. Loading the default data for the years 2000-2012 from the Worldbank database
wbdata <- c ("IT.CEL.SETS.P2", "IT.NET.USER.P2", "NY.GDP.PCAP.PP.CD","SP.POP.TOTL","SI.POV.DDAY","SL.UEM.TOTL.ZS","VC.IHR.PSRC.P5"
,"CC.EST","GE.EST","PV.EST","RQ.EST","RL.EST","VA.EST","SP.DYN.TFRT.IN")
WDI_indi<- WDI(country = "all", indicator = wbdata,
start = 1990, end = 2013, extra = FALSE, cache = NULL)
# 3. Creating an unique identifier for both data frames
emigrationtotal$iso2c <- countrycode (emigrationtotal$Country, origin = 'country.name',
destination = 'iso2c', warn = TRUE)
WDI_indi$iso2c <- countrycode (WDI_indi$country, origin = 'country.name',
destination = 'iso2c', warn = TRUE)
# 4. Merging "WDI Indicators " and "UN Migration stocks"
Merged <- merge(emigrationtotal, WDI_indi, by = c('iso2c','year'))
summary(Merged)
# 5. Renaming all the variables with simple names
Merged <- plyr::rename(Merged, c("IT.CEL.SETS.P2" = "CellphoneUsers"))
Merged <- plyr::rename(Merged, c("IT.NET.USER.P2" = "InternetUsers"))
Merged <- plyr::rename(Merged, c("NY.GDP.PCAP.PP.CD" = "GDPPerCapita"))
Merged <- plyr::rename(Merged, c("SP.POP.TOTL" = "TotalPopulation"))
Merged <- plyr::rename(Merged, c("SI.POV.DDAY" = "Poverty"))
Merged <- plyr::rename(Merged, c("SL.UEM.TOTL.ZS" = "UnemploymentRate"))
Merged <- plyr::rename(Merged, c("VC.IHR.PSRC.P5" = "IntentionalHomocides"))
Merged <- plyr::rename(Merged, c("CC.EST" = "Corruption"))
Merged <- plyr::rename(Merged, c("GE.EST" = "GovernmentEffectiveness"))
Merged <- plyr::rename(Merged, c("PV.EST" = "PoliticalStability"))
Merged <- plyr::rename(Merged, c("RQ.EST" = "RegulatoryQuality"))
Merged <- plyr::rename(Merged, c("RL.EST" = "RuleOfLaw"))
Merged <- plyr::rename(Merged, c("VA.EST" = " VoiceAndAccountability"))
Merged <- plyr::rename(Merged, c("SP.DYN.TFRT.IN" = "FertilityRate"))
View(WDI_indi)
tables <-c(2, 5, 8, 11)
for (i in tables)
{
Migration<- import("UN_MigrantStockByOriginAndDestination_2013T10.xls",
format = "xls", sheet =i)
emigration<- Migration[c(15,16),]
emigration<- t(emigration)
emigration<-as.data.frame(emigration)
emigration<- emigration[c(10:241),]
colnames(emigration) <- c("Country","Emigration")
assign(paste0("emigration", i), emigration)
}
emigrationtotal <- cbind(emigration11, emigration8, emigration5, emigration2)
emigrationtotal <-emigrationtotal[,c(1,2, 4, 6,  8)]
emigrationtotal <- gather(emigrationtotal, year, emigration, 2:5)
emigrationtotal$year <- as.character(emigrationtotal$year)
emigrationtotal$year[emigrationtotal$year=="Emigration"] <- "2013"
emigrationtotal$year[emigrationtotal$year=="Emigration.1"] <- "2010"
emigrationtotal$year[emigrationtotal$year=="Emigration.2"] <- "2000"
emigrationtotal$year[emigrationtotal$year=="Emigration.3"] <- "1990"
ls()
rm(list = c("emigration","emigration11", "emigration2", "emigration5", "emigration8",
"i", "tables"))
tables <-c(2, 5, 8, 11)
for (i in tables)
{
Migration<- import("UN_MigrantStockByOriginAndDestination_2013T10.xls",
format = "xls", sheet =i)
emigration<- Migration[c(15,16),]
emigration<- t(emigration)
emigration<-as.data.frame(emigration)
emigration<- emigration[c(10:241),]
colnames(emigration) <- c("Country","Emigration")
assign(paste0("emigration", i), emigration)
}
setwd('/Users/AnaCe/Desktop/Assignment3MontesReyla')
#setwd('/Users/ayrarowenareyla/Desktop/The Hertie School of Governance/Collaborative Social Sciences/Assignment3MontesReyla/Assignment3MontesReyla')
# 3. Load and data cleaning
# Migration UN Data: loop that loads into R each table
# in the file and extracts the relevant information for this assigment
tables <-c(2, 5, 8, 11)
for (i in tables)
{
Migration<- import("UN_MigrantStockByOriginAndDestination_2013T10.xls",
format = "xls", sheet =i)
emigration<- Migration[c(15,16),]
emigration<- t(emigration)
emigration<-as.data.frame(emigration)
emigration<- emigration[c(10:241),]
colnames(emigration) <- c("Country","Emigration")
assign(paste0("emigration", i), emigration)
}
emigrationtotal <- cbind(emigration11, emigration8, emigration5, emigration2)
emigrationtotal <-emigrationtotal[,c(1,2, 4, 6,  8)]
emigrationtotal <- gather(emigrationtotal, year, emigration, 2:5)
emigrationtotal$year <- as.character(emigrationtotal$year)
emigrationtotal$year[emigrationtotal$year=="Emigration"] <- "2013"
emigrationtotal$year[emigrationtotal$year=="Emigration.1"] <- "2010"
emigrationtotal$year[emigrationtotal$year=="Emigration.2"] <- "2000"
emigrationtotal$year[emigrationtotal$year=="Emigration.3"] <- "1990"
ls()
rm(list = c("emigration","emigration11", "emigration2", "emigration5", "emigration8",
"i", "tables"))
emigrationtotal$iso2c <- countrycode (emigrationtotal$Country, origin = 'country.name',
destination = 'iso2c', warn = TRUE)
WDI_indi$iso2c <- countrycode (WDI_indi$country, origin = 'country.name',
destination = 'iso2c', warn = TRUE)
# 4. Merging "WDI Indicators " and "UN Migration stocks"
Merged <- merge(emigrationtotal, WDI_indi, by = c('iso2c','year'))
summary(Merged)
# 5. Renaming all the variables with simple names
Merged <- plyr::rename(Merged, c("IT.CEL.SETS.P2" = "CellphoneUsers"))
Merged <- plyr::rename(Merged, c("IT.NET.USER.P2" = "InternetUsers"))
Merged <- plyr::rename(Merged, c("NY.GDP.PCAP.PP.CD" = "GDPPerCapita"))
Merged <- plyr::rename(Merged, c("SP.POP.TOTL" = "TotalPopulation"))
Merged <- plyr::rename(Merged, c("SI.POV.DDAY" = "Poverty"))
Merged <- plyr::rename(Merged, c("SL.UEM.TOTL.ZS" = "UnemploymentRate"))
Merged <- plyr::rename(Merged, c("VC.IHR.PSRC.P5" = "IntentionalHomocides"))
Merged <- plyr::rename(Merged, c("CC.EST" = "Corruption"))
Merged <- plyr::rename(Merged, c("GE.EST" = "GovernmentEffectiveness"))
Merged <- plyr::rename(Merged, c("PV.EST" = "PoliticalStability"))
Merged <- plyr::rename(Merged, c("RQ.EST" = "RegulatoryQuality"))
Merged <- plyr::rename(Merged, c("RL.EST" = "RuleOfLaw"))
Merged <- plyr::rename(Merged, c("VA.EST" = " VoiceAndAccountability"))
Merged <- plyr::rename(Merged, c("SP.DYN.TFRT.IN" = "FertilityRate"))
sum(is.na(Merged$CellphoneUsers)
View(Merged)
View(Merged)
sum(is.na(Merged$CellphoneUsers))
for (i in variables)
{
NAs <- sum(is.na(Merged$i))
assign(paste0("sum", i), sum)
}
variables <-c("CellphoneUsers", "InternetUsers", "GDPPerCapita", "TotalPopulation", "Poverty", "UnemploymentRate", "IntentionalHomocides",
"Corruption", "GovernmentEffectivness", "PoliticalStability", "RegulatoryStability", "RegulatoryQuality", "RuleOfLaw",
"VoiceAndAccountability", "FertilityRate")
for (i in variables)
{
NAs <- sum(is.na(Merged$i))
assign(paste0("sum", i), sum)
}
NAs<-as.data.frame(NAs)
View(NAs)
View(NAs)
?assign
rm(list = c("NAs", "i", "tables"))
for (i in variables)
{
NAs <- sum(is.na(Merged$i))
NAs<-as.data.frame(NAs)
assign(paste0("sum", i), sum)
}
View(NAs)
View(NAs)
?paste0
for (i in variables)
{
NAs <- sum(is.na(Merged$i))
NAs<-as.data.frame(NAs)
assign(paste0("NAs", i), sum)
}
rm(list = c("NAs", "i", "tables"))
for (i in variables) {
NAs$i <- sum(is.na(Merged$i))
}
for (i in variables) {
NAs <- c(sum(is.na(Merged$i)))
}
NAs<-as.data.frame(NAs)
for (i in variables) {
NAs <- c(sum(is.na(Merged$i)))
assign(paste0("NAs", i), sum)
}
NAs<-as.data.frame(NAs)
for (i in variables) {
NAs <- data.frame(i = (sum(is.na(Merged$i)))
}
for (i in variables) {
NAs <- data.frame(i = sum(is.na(Merged$i)))
}
View(NAs)
View(NAs)
